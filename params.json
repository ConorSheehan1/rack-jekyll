{
  "name": "Rack-Jekyll",
  "tagline": "Transform your Jekyll app into Rack application!",
  "body": "Rack-Jekyll\r\n===========\r\n\r\nTransform your [Jekyll](https://jekyllrb.com/) app\r\ninto a [Rack](https://github.com/rack/rack) application.\r\n\r\n- You can run it with rackup, [shotgun](https://github.com/rtomayko/shotgun),\r\n  [unicorn](http://unicorn.bogomips.org/), and more.\r\n- You can run Rack-Jekyll with any modified Jekyll.\r\n- You can deploy Rack-Jekyll to Heroku, EC2, Rackspace,\r\n  dedicated servers, VPS, etc.\r\n\r\n\r\n## How to use it\r\n\r\nA `config.ru` file is required in order to run with shotgun and rackup.\r\nYou can even deploy your Jekyll app to [Heroku](https://www.heroku.com/)!\r\n\r\nCopy this into `config.ru` in your Jekyll site's root directory:\r\n\r\n``` ruby\r\nrequire \"rack/jekyll\"\r\n\r\nrun Rack::Jekyll.new\r\n```\r\n\r\nThat's it.\r\n\r\nHeroku provides a read-only filesystem, so you need to generate pages\r\nand git-commit them *before* you deploy your Jekyll site to Heroku.\r\n\r\n 1. `cd` to your Jekyll directory\r\n 2. add a `config.ru` file (see example above)\r\n 3. build pages with `jekyll build`\r\n 4. add `gem \"rack-jekyll\"` to your `Gemfile`\r\n 5. `git init && git add .`\r\n 6. `git commit -m \"Initial commit\"`\r\n 7. `heroku create`\r\n 8. `git push heroku master`\r\n\r\n\r\n## Configuration\r\n\r\nJekyll configuration options can be specified in a `_config.yml` file\r\nor as Rack-Jekyll initialization options in `config.ru`.\r\n\r\nExample:\r\n\r\n``` ruby\r\nrun Rack::Jekyll.new(:destination => \"mysite\")\r\n```\r\n\r\nThis will set a custom destination path, overriding the default (`_site`)\r\nand settings from a config file.\r\n\r\nSee [Jekyll's configuration docs](https://jekyllrb.com/docs/configuration/)\r\nfor more settings.\r\n\r\nAdditional Rack-Jekyll initialization options:\r\n\r\n    :config        - use given config file (default: \"_config.yml\")\r\n    :force_build   - whether to always generate the site at startup, even\r\n                     when the destination path is not empty (default: false)\r\n    :auto          - whether to watch for changes and rebuild (default: false)\r\n    :wait_page     - a page to display while pages are rendering\r\n\r\nNote that on read-only filesystems a site build will fail,\r\nso do not set `:force_build => true` in these cases.\r\n\r\n\r\n## 404 page\r\n\r\nIn your site's root directory you can provide a custom `404.html` file\r\nwith YAML front matter.\r\n\r\n\r\n## Wait page\r\n\r\nYou can create a custom HTML page to display while Jekyll is rendering the\r\nsite.  Set the `:wait_page` initialization option to point to a file relative\r\nto the root of your Jekyll project.\r\n\r\n*Example:*\r\n\r\n    run Rack::Jekyll.new(:wait_page => \"hold_on.html\")\r\n\r\nNote that this page should be self-contained (no links to external CSS\r\nor JS).  It is also not a bad idea to add a `<meta http-equiv=\"refresh\"\r\ncontent=\"60\"/>` to the `head` section so that the page will periodically\r\nrefresh itself and display the site once Jekyll has finished rendering.\r\n\r\n\r\n## Contributing\r\n\r\nContributions are more than just welcome.\r\nFork this repo and create a new branch, then submit a pull request.\r\n\r\n\r\n## Contributors\r\n\r\n* adaoraul (Adão Raul)\r\n* Nerian (Gonzalo Rodríguez-Baltanás Díaz)\r\n* scottwater (Scott Watermasysk)\r\n* thedjinn (Emil Loer)\r\n* bry4n (Bryan Goines)\r\n* thibaudgg (Thibaud Guillaume-Gentil)\r\n* bemurphy (Brendon Murphy)\r\n* imajes (James Cox)\r\n* mattr- (Matt Rogers)\r\n* stomar (Marcus Stollsteimer)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}